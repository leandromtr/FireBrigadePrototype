@model EscalaTurno
@using MapaDaForca.Model.Enums

@{
    ViewBag.Title = "Escala x Turno: ";
    ViewBag.Breadcrumbs = new List<Breadcrumb>()
{
new Breadcrumb() { Name = "Dashboard", Link = "/" },
new Breadcrumb() { Name = "Escala x Turno", Link = @Url.Action("Index","EscalaTurno")},
};
}



<div class="row">
    <div class="col-4">
        <div class="card">
            <div class="card-body">
                <form id="form">
                    <input id="PeriodoDiurnoId" type="hidden" value="">
                    <input id="PeriodoNoturnoId" type="hidden" value="">

                    <div class="form-group">
                        <label class="form-label">@Html.DisplayNameFor(m => m.DtEscalaTurno)</label>
                        @*@Html.TextBoxFor(m => m.Data, new { @class = "form-control", @type = "text", @required = "required" })*@
                        <div class="input-group">
                            <input id="DtEscalaTurno" type="date" class="form-control" placeholder="dd/mm/yyyy">
                            <div class="input-group-append"><span class="input-group-text"><i class="mdi mdi-calendar"></i></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Período Diurno</label>
                        <select class="form-control" id="TurnoDiurno" asp-items="@Html.GetEnumSelectList<Turno>()"></select>
                    </div>
                    <div class="form-group">
                        <label>Período Noturno</label>
                        <select class="form-control" id="TurnoNoturno" asp-items="@Html.GetEnumSelectList<Turno>()"></select>
                    </div>
                </form>
                <div class="form-group mb-0">
                    <div>
                        <button id="SaveEscalaTurno" class="btn btn-primary waves-effect waves-light">Salvar</button>
                        <button id="SaveEscalaTurnoAno" class="btn btn-primary waves-effect waves-light">Salvar Ano</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-8">
        <div class="card m-b-30">
            <div class="card-body">
                <div id="calendar"></div>
                <div style="clear:both"></div>
            </div>
        </div>
    </div>
</div>

<div id="calendarModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
                <h4 id="modalTitle" class="modal-title"></h4>
                <h5 id="modalPeriodo" class="modal-periodo"></h5>
                <h5 id="modalstart" class="modal-start"></h5>
            </div>
            <div id="modalBody" class="modal-body"> </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

$(document).ready(function () {
    var currentDate = $.datepicker.formatDate('yy-mm-dd', new Date());
    @*var tt = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model) as String);*@
    SetForm(currentDate);

    var $calendar = $('#calendar');

        $calendar.fullCalendar({
            ignoreTimezone: false,
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sabado'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],
            titleFormat: {
                    month: 'MMMM yyyy',
            },
            buttonText: {
                    today: "Hoje",
            },
            viewRender: function (view, element) {
                var currentDay=$('#calendar').fullCalendar('getDate');
                $("#calendar").fullCalendar('removeEvents');
                $.ajax( {
                    type: "POST",
                    url: '@Url.RouteUrl(new{ action= "GetEvents", controller="EscalaTurno"})',
                    data: {
                        calendarDate: currentDay.format()
                    }
                    , success: function (data) {
                        renderEvents(data);
                    }
                    , error: function (error) {
                        alert('failed');
                    }
                });
            },
            dayClick: function (date, jsEvent, view) {
                SetForm(date.format())
            },
            eventClick: function (calEvent, jsEvent, view) {
                SetForm(calEvent.start.format())
            },
            header: {
                    left: "title", right: "prev,next today"
            },
            titleFormat: {
                    month: "MMMM YYYY", week: "MMMM YYYY", day: "MMMM YYYY"
            },
        	firstDay: 1, //The day that each week begins (Monday=1)
        });

		function renderEvents(data) {
			$.each(data, function (i, event) {
				$calendar.fullCalendar('renderEvent',
				{
					id: event.id,
                   	title: event.title,
                    start: moment(event.start),
                    allDay: true
				}, true);
            });
        }

    });



    $("#SaveEscalaTurno").click(function () {
        $.ajax({
            url: '@Url.Action("SaveByDate", "EscalaTurno")',
            type: "POST",
            data: {
                dtEscalaTurno: $("#DtEscalaTurno").val(),
                periodoDiurnoId: $("#PeriodoDiurnoId").val(),
                periodoNoturnoId: $("#PeriodoNoturnoId").val(),
                turnoDiurno: $("#TurnoDiurno").val(),
                turnoNoturno: $("#TurnoNoturno").val()
            }
        })
        .done(function (data) {
            $.notify(data.message, "success");
            $("#calendar").fullCalendar('removeEvents', $("#PeriodoDiurnoId").val());
            $('#calendar').fullCalendar('renderEvent', { id: $("#PeriodoDiurnoId").val(), title: 'D - Turno ' + $("#TurnoDiurno").val(), start: $("#DtEscalaTurno").val()}, true );
            $("#calendar").fullCalendar('removeEvents', $("#PeriodoNoturnoId").val());
            $('#calendar').fullCalendar('renderEvent', { id: $("#PeriodoNoturnoId").val(), title: 'N - Turno ' + $("#TurnoNoturno").val(), start: $("#DtEscalaTurno").val() }, true);

        })
    });

    function SetForm(dtEscalaTurno) {
        $("#DtEscalaTurno").val(dtEscalaTurno);
            $.ajax({
                dataType: "json",
                url: "@Url.Action("GetByData", "EscalaTurno")",
                data: {
                    dtEscalaTurno: dtEscalaTurno
                },
                success: function (data) {
                    $.each(data.escalaTurnos, function (key, escalaTurno) {
                        if (escalaTurno.periodoDiurno == true) {
                            $("#PeriodoDiurnoId").val(escalaTurno.id);
                            $("#TurnoDiurno").val(escalaTurno.turno);
                        }
                        else
                        {
                            $("#PeriodoNoturnoId").val(escalaTurno.id);
                            $("#TurnoNoturno").val(escalaTurno.turno);
                        }
                    });
                }
            });

    }   

     $("#SaveEscalaTurnoAno").click(function () {
            var year = prompt("Favor informar o ano", (new Date).getFullYear());
            $.ajax({
                url: '@Url.Action("SaveYear", "EscalaTurno")',
                type: "POST",
                data: {
                    year: year
                }
            })
            .done(function () {
                window.location.href = '@Url.Action("Index", "EscalaTurno")';
            })
        });

</script>



@*Add*@
@*$('#calendar').fullCalendar( 'renderEvent', {
        id: '047975cd-9077-415e-854f-6fe394b48556',
        title: 'Some Title',
        start: '2019-03-30'
    }, true );*@


@*Remove*@
@*$("#calendar").fullCalendar('removeEvents', '047975cd-9077-415e-854f-6fe394b48556');*@

