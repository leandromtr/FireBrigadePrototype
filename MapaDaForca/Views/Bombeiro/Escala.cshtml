@model BombeiroEscalaViewModel
@using MapaDaForca.Model.Enums

@{
    ViewBag.Title = "Bombeiro: " + Model.Bombeiro.Nome;
    ViewBag.Breadcrumbs = new List<Breadcrumb>()
{
new Breadcrumb() { Name = "Dashboard", Link = "/" },
new Breadcrumb() { Name = "Bombeiro", Link = @Url.Action("Index","Bombeiro")},
new Breadcrumb() { Name = Model.Bombeiro.Nome, Link = @Url.Action("Detail","Bombeiro", new { @id = Model.Bombeiro.Id })},
new Breadcrumb() { Name = "Escala", Link = @Url.Action("Escala","Bombeiro", new { @id = Model.Bombeiro.Id }), IsActive = true}
};
}

<style>
    .fc-event-time, .fc-event-title {
        padding: 0 1px;
        white-space: nowrap;
    }

    .fc-title {
        white-space: normal;
    }
</style>

<div class="row">
    <div class="col-4">
        <div class="card">
            <div class="card-body">
                <form id="form">
                    <input type="hidden" id="EscalaId">

                    <div class="form-group">
                        <label>Dia</label>
                        <div class="input-group">
                            <input id="DtEscala" type="date" class="form-control" placeholder="dd/mm/yyyy">
                            <div class="input-group-append"><span class="input-group-text"><i class="mdi mdi-calendar"></i></span></div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>@Html.DisplayNameFor(x => x.Escala.FuncaoId)</label>
                        <div>
                            <select class="form-control" asp-for="Escala.FuncaoId" asp-items="@(new SelectList(@Model.Funcoes,"Id","Nome"))"></select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>@Html.DisplayNameFor(x => x.Escala.QuartelId)</label>
                        <div>
                            <select class="form-control" asp-for="Escala.QuartelId" asp-items="@(new SelectList(@Model.Quarteis,"Id","Nome"))"></select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>@Html.DisplayNameFor(x => x.Escala.EscalaTipoId)</label>
                        <div>
                            <select class="form-control" asp-for="Escala.EscalaTipoId" asp-items="@(new SelectList(@Model.EscalaTipos,"Id","Descricao"))"></select>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>@Html.DisplayNameFor(x => x.Escala.PeriodoDiurno)</label>
                        <div>
                            <input type="checkbox" asp-for="Escala.PeriodoDiurno" id="PeriodoDiurno" switch="success" @*checked="checked" *@>
                            <label for="PeriodoDiurno" data-on-label="Sim" data-off-label="Não"></label>
                        </div>
                    </div>
                </form>
                <div class="form-group mb-0">
                    <div>
                        <button id="SaveBombeiroEscala" class="btn btn-primary waves-effect waves-light">Guardar</button>
                        <button id="DeleteBombeiroEscala" class="btn btn-primary waves-effect waves-light">Excluir</button>
                        <button id="SaveBombeiroEscalaAno" class="btn btn-primary waves-effect waves-light">Guardar por Ano</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-8">
        <div class="card m-b-30">
            <div class="card-body">
                <div id="calendar"></div>
                <div style="clear:both"></div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

$(document).ready(function () {
    var currentDate = $.datepicker.formatDate('yy-mm-dd', new Date());
    @*var tt = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model) as String);*@
    SetForm(currentDate);

    var $calendar = $('#calendar');

        $calendar.fullCalendar({
            ignoreTimezone: false,
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sabado'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sab'],
            titleFormat: {
                    month: 'MMMM yyyy',
            },
            buttonText: {
                    today: "Hoje",
            },
            viewRender: function (view, element) {
                var currentDay=$('#calendar').fullCalendar('getDate');
                $("#calendar").fullCalendar('removeEvents');
                $.ajax( {
                    type: "POST",
                    url: '@Url.RouteUrl(new{ action= "GetEvents", controller="Bombeiro"})',
                    data: {
                        bombeiroId: '@Model.Bombeiro.Id',
                        calendarDate: currentDay.format()
                    }
                    , success: function (data) {
                        renderEvents(data);
                    }
                    , error: function (error) {
                        alert('failed');
                    }
                });
            },
            dayClick: function (date, jsEvent, view) {
                SetForm(date.format())
            },
            eventClick: function (calEvent, jsEvent, view) {
                SetForm(calEvent.start.format())
            },
            header: {
                    left: "title", right: "prev,next today"
            },
            titleFormat: {
                    month: "MMMM YYYY", week: "MMMM YYYY", day: "MMMM YYYY"
            },
        	firstDay: 1, //The day that each week begins (Monday=1)
        });

		function renderEvents(data) {
			$.each(data, function (i, event) {
				$calendar.fullCalendar('renderEvent',
				{
					id: event.id,
                   	title: event.title,
                    start: moment(event.start),
                    allDay: true
				}, true);
            });
        }
    });


    $("#SaveBombeiroEscala").click(function () {
        $.ajax({
            url: '@Url.Action("SaveBombeiroEscala", "Bombeiro")',
            dataType: "json",
            type: "POST",
            data: {
                escalaId: $("#EscalaId").val(),
                bombeiroId: '@Model.Bombeiro.Id',
                dtEscala: $("#DtEscala").val(),
                funcaoId: $("#Escala_FuncaoId").val(),
                quartelId: $("#Escala_QuartelId").val(),
                escalaTipoId: $("#Escala_EscalaTipoId").val(),
                periodoDiurno: $('#PeriodoDiurno').is(":checked")
            }
        })
        .done(function (data) {
            $.notify(data.message, "success");
            $("#calendar").fullCalendar('removeEvents', $("#EscalaId").val());
            $('#calendar').fullCalendar('renderEvent', { id: data.id, title: data.title, start: $("#DtEscala").val()}, true );
        })
    });


    $("#DeleteBombeiroEscala").click(function () {
        if ($("#EscalaId").val() != "@(Guid.Empty)")
        {
            $.ajax(
            {
                type: "Delete",
                url: "/bombeiro/deleteescala/" + $("#EscalaId").val(),
                success: function (data) {
                    if (data.success == true) {
                        $.notify(data.message, "success");
                        $("#calendar").fullCalendar('removeEvents', $("#EscalaId").val());
                    }
                    else {
                        $.notify(data.message, "error");
                    }
                }
            });
        }
    });

    function SetForm(dtEscala) {
        $("#DtEscala").val(dtEscala);
        $("#EscalaId").val("@(Guid.Empty)");
        $.ajax({
            dataType: "json",
            type: "POST",
            url: "@Url.Action("GetEscalaByData", "Bombeiro")",
            data: {
                bombeiroId : '@Model.Bombeiro.Id',
                dtEscala: dtEscala
            },
            success: function (data) {
                if (data.escala != null) {
                    $("#EscalaId").val(data.escala.id);
                    $("#Escala_FuncaoId").val(data.escala.funcaoId);
                    $("#Escala_QuartelId").val(data.escala.quartelId);
                    $("#Escala_EscalaTipoId").val(data.escala.escalaTipoId);
                    $("#PeriodoDiurno").prop("checked", data.escala.periodoDiurno);
                }
                else {
                    $("#EscalaId").val();
                }
            }
        });
    }

    $("#SaveBombeiroEscalaAno").click(function () {
         var year = prompt("Favor informar o ano", (new Date).getFullYear());
         $.ajax({
             url: '@Url.Action("SaveYear", "Bombeiro")',
             type: "POST",
             data: {
                 bombeiroId: '@Model.Bombeiro.Id',
                 year: year
             }
         })
         .done(function () {
             window.location.href = '@Url.Action("Escala","Bombeiro", new { @id = Model.Bombeiro.Id })';
         })
    });

</script>

